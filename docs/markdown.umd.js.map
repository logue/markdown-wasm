{"version":3,"file":"markdown.umd.js","sources":["../src/markdown.js","../src/index.js","../__vite-browser-external"],"sourcesContent":["\r\nvar Module = (() => {\r\n  var _scriptDir = import.meta.url;\r\n  \r\n  return (\r\nasync function(Module) {\r\n  Module = Module || {};\r\n\r\nvar Module = typeof Module != \"undefined\" ? Module : {};\r\n\r\nvar readyPromiseResolve, readyPromiseReject;\r\n\r\nModule[\"ready\"] = new Promise(function(resolve, reject) {\r\n readyPromiseResolve = resolve;\r\n readyPromiseReject = reject;\r\n});\r\n\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\n\r\nvar thisProgram = \"./this.program\";\r\n\r\nvar quit_ = (status, toThrow) => {\r\n throw toThrow;\r\n};\r\n\r\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\r\n\r\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\r\n\r\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\r\n\r\nvar scriptDirectory = \"\";\r\n\r\nfunction locateFile(path) {\r\n if (Module[\"locateFile\"]) {\r\n  return Module[\"locateFile\"](path, scriptDirectory);\r\n }\r\n return scriptDirectory + path;\r\n}\r\n\r\nvar read_, readAsync, readBinary, setWindowTitle;\r\n\r\nfunction logExceptionOnExit(e) {\r\n if (e instanceof ExitStatus) return;\r\n let toLog = e;\r\n err(\"exiting due to exception: \" + toLog);\r\n}\r\n\r\nif (ENVIRONMENT_IS_NODE) {\r\n const {createRequire: createRequire} = await import(\"module\");\r\n var require = createRequire(import.meta.url);\r\n var fs = require(\"fs\");\r\n var nodePath = require(\"path\");\r\n if (ENVIRONMENT_IS_WORKER) {\r\n  scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\r\n } else {\r\n  scriptDirectory = require(\"url\").fileURLToPath(new URL(\"./\", import.meta.url));\r\n }\r\n read_ = (filename, binary) => {\r\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\r\n  return fs.readFileSync(filename, binary ? undefined : \"utf8\");\r\n };\r\n readBinary = filename => {\r\n  var ret = read_(filename, true);\r\n  if (!ret.buffer) {\r\n   ret = new Uint8Array(ret);\r\n  }\r\n  return ret;\r\n };\r\n readAsync = (filename, onload, onerror) => {\r\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\r\n  fs.readFile(filename, function(err, data) {\r\n   if (err) onerror(err); else onload(data.buffer);\r\n  });\r\n };\r\n if (process[\"argv\"].length > 1) {\r\n  thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\r\n }\r\n arguments_ = process[\"argv\"].slice(2);\r\n process[\"on\"](\"uncaughtException\", function(ex) {\r\n  if (!(ex instanceof ExitStatus)) {\r\n   throw ex;\r\n  }\r\n });\r\n process[\"on\"](\"unhandledRejection\", function(reason) {\r\n  throw reason;\r\n });\r\n quit_ = (status, toThrow) => {\r\n  if (keepRuntimeAlive()) {\r\n   process[\"exitCode\"] = status;\r\n   throw toThrow;\r\n  }\r\n  logExceptionOnExit(toThrow);\r\n  process[\"exit\"](status);\r\n };\r\n Module[\"inspect\"] = function() {\r\n  return \"[Emscripten Module object]\";\r\n };\r\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n if (ENVIRONMENT_IS_WORKER) {\r\n  scriptDirectory = self.location.href;\r\n } else if (typeof document != \"undefined\" && document.currentScript) {\r\n  scriptDirectory = document.currentScript.src;\r\n }\r\n if (_scriptDir) {\r\n  scriptDirectory = _scriptDir;\r\n }\r\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\r\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\r\n } else {\r\n  scriptDirectory = \"\";\r\n }\r\n {\r\n  read_ = url => {\r\n   var xhr = new XMLHttpRequest();\r\n   xhr.open(\"GET\", url, false);\r\n   xhr.send(null);\r\n   return xhr.responseText;\r\n  };\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n   readBinary = url => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", url, false);\r\n    xhr.responseType = \"arraybuffer\";\r\n    xhr.send(null);\r\n    return new Uint8Array(xhr.response);\r\n   };\r\n  }\r\n  readAsync = (url, onload, onerror) => {\r\n   var xhr = new XMLHttpRequest();\r\n   xhr.open(\"GET\", url, true);\r\n   xhr.responseType = \"arraybuffer\";\r\n   xhr.onload = () => {\r\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\r\n     onload(xhr.response);\r\n     return;\r\n    }\r\n    onerror();\r\n   };\r\n   xhr.onerror = onerror;\r\n   xhr.send(null);\r\n  };\r\n }\r\n setWindowTitle = title => document.title = title;\r\n} else {}\r\n\r\nvar out = Module[\"print\"] || console.log.bind(console);\r\n\r\nvar err = Module[\"printErr\"] || console.warn.bind(console);\r\n\r\nObject.assign(Module, moduleOverrides);\r\n\r\nmoduleOverrides = null;\r\n\r\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\r\n\r\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\r\n\r\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\r\n\r\nvar wasmBinary;\r\n\r\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\r\n\r\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\r\n\r\nif (typeof WebAssembly != \"object\") {\r\n abort(\"no native wasm support detected\");\r\n}\r\n\r\nvar wasmMemory;\r\n\r\nvar ABORT = false;\r\n\r\nvar EXITSTATUS;\r\n\r\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\r\n\r\nfunction updateGlobalBufferAndViews(buf) {\r\n buffer = buf;\r\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\r\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\r\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\r\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\r\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\r\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\r\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\r\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\r\n}\r\n\r\nvar INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\r\n\r\nvar wasmTable;\r\n\r\nvar __ATPRERUN__ = [];\r\n\r\nvar __ATINIT__ = [];\r\n\r\nvar __ATPOSTRUN__ = [];\r\n\r\nvar runtimeInitialized = false;\r\n\r\nfunction keepRuntimeAlive() {\r\n return noExitRuntime;\r\n}\r\n\r\nfunction preRun() {\r\n if (Module[\"preRun\"]) {\r\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\r\n  while (Module[\"preRun\"].length) {\r\n   addOnPreRun(Module[\"preRun\"].shift());\r\n  }\r\n }\r\n callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n runtimeInitialized = true;\r\n callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction postRun() {\r\n if (Module[\"postRun\"]) {\r\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\r\n  while (Module[\"postRun\"].length) {\r\n   addOnPostRun(Module[\"postRun\"].shift());\r\n  }\r\n }\r\n callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\nvar runDependencies = 0;\r\n\r\nvar runDependencyWatcher = null;\r\n\r\nvar dependenciesFulfilled = null;\r\n\r\nfunction addRunDependency(id) {\r\n runDependencies++;\r\n if (Module[\"monitorRunDependencies\"]) {\r\n  Module[\"monitorRunDependencies\"](runDependencies);\r\n }\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n runDependencies--;\r\n if (Module[\"monitorRunDependencies\"]) {\r\n  Module[\"monitorRunDependencies\"](runDependencies);\r\n }\r\n if (runDependencies == 0) {\r\n  if (runDependencyWatcher !== null) {\r\n   clearInterval(runDependencyWatcher);\r\n   runDependencyWatcher = null;\r\n  }\r\n  if (dependenciesFulfilled) {\r\n   var callback = dependenciesFulfilled;\r\n   dependenciesFulfilled = null;\r\n   callback();\r\n  }\r\n }\r\n}\r\n\r\nfunction abort(what) {\r\n if (Module[\"onAbort\"]) {\r\n  Module[\"onAbort\"](what);\r\n }\r\n what = \"Aborted(\" + what + \")\";\r\n err(what);\r\n ABORT = true;\r\n EXITSTATUS = 1;\r\n what += \". Build with -sASSERTIONS for more info.\";\r\n var e = new WebAssembly.RuntimeError(what);\r\n readyPromiseReject(e);\r\n throw e;\r\n}\r\n\r\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\r\n\r\nfunction isDataURI(filename) {\r\n return filename.startsWith(dataURIPrefix);\r\n}\r\n\r\nfunction isFileURI(filename) {\r\n return filename.startsWith(\"file://\");\r\n}\r\n\r\nvar wasmBinaryFile;\r\n\r\nif (Module[\"locateFile\"]) {\r\n wasmBinaryFile = \"markdown.wasm\";\r\n if (!isDataURI(wasmBinaryFile)) {\r\n  wasmBinaryFile = locateFile(wasmBinaryFile);\r\n }\r\n} else {\r\n wasmBinaryFile = new URL(\"markdown.wasm\", import.meta.url).href;\r\n}\r\n\r\nfunction getBinary(file) {\r\n try {\r\n  if (file == wasmBinaryFile && wasmBinary) {\r\n   return new Uint8Array(wasmBinary);\r\n  }\r\n  if (readBinary) {\r\n   return readBinary(file);\r\n  }\r\n  throw \"both async and sync fetching of the wasm failed\";\r\n } catch (err) {\r\n  abort(err);\r\n }\r\n}\r\n\r\nfunction getBinaryPromise() {\r\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n  if (typeof fetch == \"function\" && !isFileURI(wasmBinaryFile)) {\r\n   return fetch(wasmBinaryFile, {\r\n    credentials: \"same-origin\"\r\n   }).then(function(response) {\r\n    if (!response[\"ok\"]) {\r\n     throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\r\n    }\r\n    return response[\"arrayBuffer\"]();\r\n   }).catch(function() {\r\n    return getBinary(wasmBinaryFile);\r\n   });\r\n  } else {\r\n   if (readAsync) {\r\n    return new Promise(function(resolve, reject) {\r\n     readAsync(wasmBinaryFile, function(response) {\r\n      resolve(new Uint8Array(response));\r\n     }, reject);\r\n    });\r\n   }\r\n  }\r\n }\r\n return Promise.resolve().then(function() {\r\n  return getBinary(wasmBinaryFile);\r\n });\r\n}\r\n\r\nfunction createWasm() {\r\n var info = {\r\n  \"a\": asmLibraryArg\r\n };\r\n function receiveInstance(instance, module) {\r\n  var exports = instance.exports;\r\n  Module[\"asm\"] = exports;\r\n  wasmMemory = Module[\"asm\"][\"b\"];\r\n  updateGlobalBufferAndViews(wasmMemory.buffer);\r\n  wasmTable = Module[\"asm\"][\"i\"];\r\n  addOnInit(Module[\"asm\"][\"c\"]);\r\n  removeRunDependency(\"wasm-instantiate\");\r\n }\r\n addRunDependency(\"wasm-instantiate\");\r\n function receiveInstantiationResult(result) {\r\n  receiveInstance(result[\"instance\"]);\r\n }\r\n function instantiateArrayBuffer(receiver) {\r\n  return getBinaryPromise().then(function(binary) {\r\n   return WebAssembly.instantiate(binary, info);\r\n  }).then(function(instance) {\r\n   return instance;\r\n  }).then(receiver, function(reason) {\r\n   err(\"failed to asynchronously prepare wasm: \" + reason);\r\n   abort(reason);\r\n  });\r\n }\r\n function instantiateAsync() {\r\n  if (!wasmBinary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\r\n   return fetch(wasmBinaryFile, {\r\n    credentials: \"same-origin\"\r\n   }).then(function(response) {\r\n    var result = WebAssembly.instantiateStreaming(response, info);\r\n    return result.then(receiveInstantiationResult, function(reason) {\r\n     err(\"wasm streaming compile failed: \" + reason);\r\n     err(\"falling back to ArrayBuffer instantiation\");\r\n     return instantiateArrayBuffer(receiveInstantiationResult);\r\n    });\r\n   });\r\n  } else {\r\n   return instantiateArrayBuffer(receiveInstantiationResult);\r\n  }\r\n }\r\n if (Module[\"instantiateWasm\"]) {\r\n  try {\r\n   var exports = Module[\"instantiateWasm\"](info, receiveInstance);\r\n   return exports;\r\n  } catch (e) {\r\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\r\n   readyPromiseReject(e);\r\n  }\r\n }\r\n instantiateAsync().catch(readyPromiseReject);\r\n return {};\r\n}\r\n\r\nfunction ExitStatus(status) {\r\n this.name = \"ExitStatus\";\r\n this.message = \"Program terminated with exit(\" + status + \")\";\r\n this.status = status;\r\n}\r\n\r\nfunction callRuntimeCallbacks(callbacks) {\r\n while (callbacks.length > 0) {\r\n  callbacks.shift()(Module);\r\n }\r\n}\r\n\r\nfunction getHeapMax() {\r\n return 2147483648;\r\n}\r\n\r\nfunction emscripten_realloc_buffer(size) {\r\n try {\r\n  wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\r\n  updateGlobalBufferAndViews(wasmMemory.buffer);\r\n  return 1;\r\n } catch (e) {}\r\n}\r\n\r\nfunction _emscripten_resize_heap(requestedSize) {\r\n var oldSize = HEAPU8.length;\r\n requestedSize = requestedSize >>> 0;\r\n var maxHeapSize = getHeapMax();\r\n if (requestedSize > maxHeapSize) {\r\n  return false;\r\n }\r\n let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\r\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\r\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n  var replacement = emscripten_realloc_buffer(newSize);\r\n  if (replacement) {\r\n   return true;\r\n  }\r\n }\r\n return false;\r\n}\r\n\r\nfunction uleb128Encode(n, target) {\r\n if (n < 128) {\r\n  target.push(n);\r\n } else {\r\n  target.push(n % 128 | 128, n >> 7);\r\n }\r\n}\r\n\r\nfunction sigToWasmTypes(sig) {\r\n var typeNames = {\r\n  \"i\": \"i32\",\r\n  \"j\": \"i32\",\r\n  \"f\": \"f32\",\r\n  \"d\": \"f64\",\r\n  \"p\": \"i32\"\r\n };\r\n var type = {\r\n  parameters: [],\r\n  results: sig[0] == \"v\" ? [] : [ typeNames[sig[0]] ]\r\n };\r\n for (var i = 1; i < sig.length; ++i) {\r\n  type.parameters.push(typeNames[sig[i]]);\r\n  if (sig[i] === \"j\") {\r\n   type.parameters.push(\"i32\");\r\n  }\r\n }\r\n return type;\r\n}\r\n\r\nfunction generateFuncType(sig, target) {\r\n var sigRet = sig.slice(0, 1);\r\n var sigParam = sig.slice(1);\r\n var typeCodes = {\r\n  \"i\": 127,\r\n  \"p\": 127,\r\n  \"j\": 126,\r\n  \"f\": 125,\r\n  \"d\": 124\r\n };\r\n target.push(96);\r\n uleb128Encode(sigParam.length, target);\r\n for (var i = 0; i < sigParam.length; ++i) {\r\n  target.push(typeCodes[sigParam[i]]);\r\n }\r\n if (sigRet == \"v\") {\r\n  target.push(0);\r\n } else {\r\n  target.push(1, typeCodes[sigRet]);\r\n }\r\n}\r\n\r\nfunction convertJsFunctionToWasm(func, sig) {\r\n if (typeof WebAssembly.Function == \"function\") {\r\n  return new WebAssembly.Function(sigToWasmTypes(sig), func);\r\n }\r\n var typeSectionBody = [ 1 ];\r\n generateFuncType(sig, typeSectionBody);\r\n var bytes = [ 0, 97, 115, 109, 1, 0, 0, 0, 1 ];\r\n uleb128Encode(typeSectionBody.length, bytes);\r\n bytes.push.apply(bytes, typeSectionBody);\r\n bytes.push(2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0);\r\n var module = new WebAssembly.Module(new Uint8Array(bytes));\r\n var instance = new WebAssembly.Instance(module, {\r\n  \"e\": {\r\n   \"f\": func\r\n  }\r\n });\r\n var wrappedFunc = instance.exports[\"f\"];\r\n return wrappedFunc;\r\n}\r\n\r\nfunction getWasmTableEntry(funcPtr) {\r\n return wasmTable.get(funcPtr);\r\n}\r\n\r\nfunction updateTableMap(offset, count) {\r\n if (functionsInTableMap) {\r\n  for (var i = offset; i < offset + count; i++) {\r\n   var item = getWasmTableEntry(i);\r\n   if (item) {\r\n    functionsInTableMap.set(item, i);\r\n   }\r\n  }\r\n }\r\n}\r\n\r\nvar functionsInTableMap = undefined;\r\n\r\nvar freeTableIndexes = [];\r\n\r\nfunction getEmptyTableSlot() {\r\n if (freeTableIndexes.length) {\r\n  return freeTableIndexes.pop();\r\n }\r\n try {\r\n  wasmTable.grow(1);\r\n } catch (err) {\r\n  if (!(err instanceof RangeError)) {\r\n   throw err;\r\n  }\r\n  throw \"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";\r\n }\r\n return wasmTable.length - 1;\r\n}\r\n\r\nfunction setWasmTableEntry(idx, func) {\r\n wasmTable.set(idx, func);\r\n}\r\n\r\nfunction addFunction(func, sig) {\r\n if (!functionsInTableMap) {\r\n  functionsInTableMap = new WeakMap();\r\n  updateTableMap(0, wasmTable.length);\r\n }\r\n if (functionsInTableMap.has(func)) {\r\n  return functionsInTableMap.get(func);\r\n }\r\n var ret = getEmptyTableSlot();\r\n try {\r\n  setWasmTableEntry(ret, func);\r\n } catch (err) {\r\n  if (!(err instanceof TypeError)) {\r\n   throw err;\r\n  }\r\n  var wrapped = convertJsFunctionToWasm(func, sig);\r\n  setWasmTableEntry(ret, wrapped);\r\n }\r\n functionsInTableMap.set(func, ret);\r\n return ret;\r\n}\r\n\r\nfunction removeFunction(index) {\r\n functionsInTableMap.delete(getWasmTableEntry(index));\r\n freeTableIndexes.push(index);\r\n}\r\n\r\nvar asmLibraryArg = {\r\n \"a\": _emscripten_resize_heap\r\n};\r\n\r\nvar asm = createWasm();\r\n\r\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\r\n return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"c\"]).apply(null, arguments);\r\n};\r\n\r\nvar _wrealloc = Module[\"_wrealloc\"] = function() {\r\n return (_wrealloc = Module[\"_wrealloc\"] = Module[\"asm\"][\"d\"]).apply(null, arguments);\r\n};\r\n\r\nvar _wfree = Module[\"_wfree\"] = function() {\r\n return (_wfree = Module[\"_wfree\"] = Module[\"asm\"][\"e\"]).apply(null, arguments);\r\n};\r\n\r\nvar _WErrGetCode = Module[\"_WErrGetCode\"] = function() {\r\n return (_WErrGetCode = Module[\"_WErrGetCode\"] = Module[\"asm\"][\"f\"]).apply(null, arguments);\r\n};\r\n\r\nvar _WErrGetMsg = Module[\"_WErrGetMsg\"] = function() {\r\n return (_WErrGetMsg = Module[\"_WErrGetMsg\"] = Module[\"asm\"][\"g\"]).apply(null, arguments);\r\n};\r\n\r\nvar _WErrClear = Module[\"_WErrClear\"] = function() {\r\n return (_WErrClear = Module[\"_WErrClear\"] = Module[\"asm\"][\"h\"]).apply(null, arguments);\r\n};\r\n\r\nvar _parseUTF8 = Module[\"_parseUTF8\"] = function() {\r\n return (_parseUTF8 = Module[\"_parseUTF8\"] = Module[\"asm\"][\"j\"]).apply(null, arguments);\r\n};\r\n\r\nModule[\"addOnPostRun\"] = addOnPostRun;\r\n\r\nModule[\"addFunction\"] = addFunction;\r\n\r\nModule[\"removeFunction\"] = removeFunction;\r\n\r\nvar calledRun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n if (!calledRun) run();\r\n if (!calledRun) dependenciesFulfilled = runCaller;\r\n};\r\n\r\nfunction run(args) {\r\n args = args || arguments_;\r\n if (runDependencies > 0) {\r\n  return;\r\n }\r\n preRun();\r\n if (runDependencies > 0) {\r\n  return;\r\n }\r\n function doRun() {\r\n  if (calledRun) return;\r\n  calledRun = true;\r\n  Module[\"calledRun\"] = true;\r\n  if (ABORT) return;\r\n  initRuntime();\r\n  readyPromiseResolve(Module);\r\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\r\n  postRun();\r\n }\r\n if (Module[\"setStatus\"]) {\r\n  Module[\"setStatus\"](\"Running...\");\r\n  setTimeout(function() {\r\n   setTimeout(function() {\r\n    Module[\"setStatus\"](\"\");\r\n   }, 1);\r\n   doRun();\r\n  }, 1);\r\n } else {\r\n  doRun();\r\n }\r\n}\r\n\r\nif (Module[\"preInit\"]) {\r\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\r\n while (Module[\"preInit\"].length > 0) {\r\n  Module[\"preInit\"].pop()();\r\n }\r\n}\r\n\r\nrun();\r\n\r\n\r\n  return Module.ready\r\n}\r\n);\r\n})();\r\nexport default Module;","import init from './markdown';\n\nlet Module;\n/** used by strFromUTF8Ptr as a temporary address-sized integer */\nlet tmpPtr = 0;\n\n/** Initialize Function */\nexport async function ready() {\n  Module = await init();\n\n  Module.addOnPostRun(() => {\n    tmpPtr = Module._wrealloc(0, 4);\n  });\n\n  return await Module.ready;\n}\n\n/** @type {Array<string, number>} - ParseFlags */\nexport const ParseFlags = {\n  /** In TEXT, collapse non-trivial whitespace into single ' ' */\n  COLLAPSE_WHITESPACE: 0x0001,\n  /** Do not require space in ATX headers ( ###header ) */\n  PERMISSIVE_ATX_HEADERS: 0x0002,\n  /** Recognize URLs as links even without <...> */\n  PERMISSIVE_URL_AUTO_LINKS: 0x0004,\n  /** Recognize e-mails as links even without <...> */\n  PERMISSIVE_EMAIL_AUTO_LINKS: 0x0008,\n  /** Disable indented code blocks. (Only fenced code works) */\n  NO_INDENTED_CODE_BLOCKS: 0x0010,\n  /** Disable raw HTML blocks. */\n  NO_HTML_BLOCKS: 0x0020,\n  /** Disable raw HTML (inline). */\n  NO_HTML_SPANS: 0x0040,\n  /** Enable tables extension. */\n  TABLES: 0x0100,\n  /** Enable strikethrough extension. */\n  STRIKETHROUGH: 0x0200,\n  /** Enable WWW autolinks (without proto; just 'www.') */\n  PERMISSIVE_WWW_AUTOLINKS: 0x0400,\n  /** Enable task list extension. */\n  TASK_LISTS: 0x0800,\n  /** Enable $ and $$ containing LaTeX equations. */\n  LATEX_MATH_SPANS: 0x1000,\n  /** Enable wiki links extension. */\n  WIKI_LINKS: 0x2000,\n  /** Enable underline extension (disables '_' for emphasis) */\n  UNDERLINE: 0x4000,\n\n  /** Default flags */\n  DEFAULT: 0x0001 | 0x0002 | 0x0004 | 0x0200 | 0x0100 | 0x0800,\n  // COLLAPSE_WHITESPACE\n  // PERMISSIVE_ATX_HEADERS\n  // PERMISSIVE_URL_AUTO_LINKS\n  // STRIKETHROUGH\n  // TABLES\n  // TASK_LISTS\n\n  /** No HTML */\n  NO_HTML: 0x0020 | 0x0040, // NO_HTML_BLOCKS | NO_HTML_SPANS\n\n  /** Commonmark Comply */\n  COMMONMARK: 0,\n  /** Github Style */\n  GITHUB: 0x0004 | 0x0100 | 0x0200 | 0x0800, // PERMISSIVE_URL_AUTO_LINKS | TABLES | STRIKETHROUGH | TASK_LISTS\n};\n\n/** @type {Record<string, number>} these should be in sync with \"OutputFlags\" in common.h */\nexport const OutputFlags = {\n  /** Output HTML */\n  HTML: 1 << 0,\n  /** Output XHTML (only has effect with HTML flag set)  */\n  XHTML: 1 << 1,\n  /** Allow \"javascript:\" URIs */\n  AllowJSURI: 1 << 2,\n};\n\n/**\n * Parse markdown\n *\n * @param {string | ArrayLike<number>} source - markdown text\n * @param {object} options - Parser options\n *\n * @returns {string | Uint8Array}\n */\nexport function parse(source, options) {\n  options = options || {};\n\n  const parseFlags =\n    options.parseFlags === undefined\n      ? ParseFlags.COMMONMARK\n      : options.parseFlags;\n\n  let outputFlags = options.allowJSURIs ? OutputFlags.AllowJSURI : 0;\n\n  switch (options.format) {\n    case 'xhtml':\n      outputFlags |= OutputFlags.HTML | OutputFlags.XHTML;\n      break;\n\n    case 'html':\n    case undefined:\n    case null:\n    case '':\n      outputFlags |= OutputFlags.HTML;\n      break;\n\n    default:\n      throw new Error(`[markdown-wasm] invalid format \"${options.format}\"`);\n  }\n\n  const onCodeBlockPtr = options.onCodeBlock\n    ? create_onCodeBlock_fn(options.onCodeBlock)\n    : 0;\n\n  const buf = as_byte_array(source);\n  const outbuf = withOutPtr(outptr =>\n    withTmpBytePtr(buf, (inptr, inlen) =>\n      Module._parseUTF8(\n        inptr,\n        inlen,\n        parseFlags,\n        outputFlags,\n        outptr,\n        onCodeBlockPtr\n      )\n    )\n  );\n\n  if (options.onCodeBlock) {\n    Module.removeFunction(onCodeBlockPtr);\n  }\n\n  // check for error and throw if needed\n  werrCheck();\n\n  // DEBUG\n  // if (outbuf) {\n  //   console.log(utf8.decode(outbuf))\n  // }\n\n  if (options.bytes) {\n    return outbuf;\n  }\n\n  return utf8.decode(outbuf);\n}\n\n/**\n * Function's C type: JSTextFilterFun\n * (metaptr ptr, metalen ptr, inptr ptr, inlen ptr, outptr ptr) -> outlen int\n *\n * Interacting-with-code.html#calling-javascript-functions-as-function-pointers-from-c\n * @see {@link https://emscripten.org/docs/porting/connecting_cpp_and_javascript/}\n *\n * @param {*} onCodeBlock\n */\nasync function create_onCodeBlock_fn(onCodeBlock) {\n  const fnptr = Module.addFunction((metaptr, metalen, inptr, inlen, outptr) => {\n    try {\n      // lang is the \"language\" tag, if any, provided with the code block\n      const lang =\n        metalen > 0\n          ? utf8.decode(HEAPU8.subarray(metaptr, metaptr + metalen))\n          : '';\n\n      // body is a view into heap memory of the segment of source (UTF8 bytes)\n      const body = HEAPU8.subarray(inptr, inptr + inlen);\n      let bodystr = undefined;\n      body.toString = () => bodystr || (bodystr = utf8.decode(body));\n\n      // result is the result from the onCodeBlock function\n      let result = null;\n      result = onCodeBlock(lang, body);\n\n      if (result === null || result === undefined) {\n        // Callback indicates that it does not wish to filter.\n        // The md.c implementation will html-encode the body.\n        return -1;\n      }\n\n      let resbuf = as_byte_array(result);\n      if (resbuf.length > 0) {\n        // copy resbuf to WASM heap memory\n        const resptr = mallocbuf(resbuf, resbuf.length);\n        // write pointer value\n        HEAPU32[outptr >> 2 /* == outptr / 4 */] = resptr;\n        // Note: fmt_html.c calls free(resptr)\n      }\n\n      return resbuf.length;\n    } catch (err) {\n      console.error(\n        `error in markdown onCodeBlock callback: ${err.stack || err}`\n      );\n      return -1;\n    }\n  }, 'iiiiii');\n  return fnptr;\n}\n\n/**\n * to Byte Array\n * @param {number[] | string} something\n *\n * @returns {Uint8Array}\n */\nfunction as_byte_array(something) {\n  if (typeof something == 'string') return utf8.encode(something);\n  if (something instanceof Uint8Array) return something;\n  return new Uint8Array(something);\n}\n\n/**\n * interface utf8 {\n *   encode(s :string) :Uint8Array\n *   decode(b :Uint8Array) :string\n * }\n */\nconst utf8 = (() => {\n  const enc = new TextEncoder('utf-8');\n  const dec = new TextDecoder('utf-8');\n  return {\n    encode: s => enc.encode(s),\n    decode: b => dec.decode(b),\n  };\n})();\n\n/**\n * withOutPtr facilitates the following:\n * 1. calls fn with an address to memory that fits a pointer.\n *     fn(outptr) is expected to:\n *     a. Write some data into heap memory\n *     b. Write the address of that data at outptr (i.e. *outptr = heapaddr)\n *     c. Return the length of data written\n *\n *  2. withOutPtr reads the address from outptr\n *     a. If the address is 0 (NULL), returns null\n *     b. Else a slice of the heap memory is created, starting at *outptr\n *        and ending at ((*outptr) + length_returned_by_fn).\n *        A free() function is added to the buffer and it is returned.\n *\n *  It is important to free() the memory of the returned buffer when the caller is done.\n *  This is implementation specific, so this function can not help you with that.\n *\n *  The return type is as follows:\n *    interface HeapData extends Uint8Array {\n *      readonly heapAddr :number  // address in heap == *outptr\n *    }\n *\n * @param {Function} fn\n *\n * @example\n *    // WASM module, in C:\n *    typedef struct Color_ { char r, g, b; } Color;\n *    size_t newColor(const Color** outp) {\n *      Color* c = (Color*)malloc(sizeof(Color));\n *      c->r = 0xFF;\n *      c->g = 0xCA;\n *      c->b = 0x0;\n *      *outp = c;\n *      return sizeof(Color);\n *    }\n *    void freeColor(const Color* p) {\n *      free(p);\n *   }\n *\n *    // JavaScript\n *    let color = withOutPtr(_newColor)\n *    console.log(\"RGB:\", color[0], color[1], color[2])\n *   _freeColor(color.heapAddr)\n */\nfunction withOutPtr(fn) {\n  const len = fn(tmpPtr);\n  let addr = Module.HEAP32[tmpPtr >> 2];\n  if (addr == 0) {\n    return null;\n  }\n  const buf = Module.HEAPU8.subarray(addr, addr + len);\n  buf.heapAddr = addr;\n  return buf;\n}\n\n/**\n * withTmpBytePtr takes an ArrayBuffer or Uint8Array and:\n * 1. copies it into the WASM module memory\n * 2. calls fn(pointer, size)\n * 3. calls free(pointer)\n *\n * @param {ArrayBuffer} buf\n * @param {Function} fn\n */\nfunction withTmpBytePtr(buf, fn) {\n  const size = buf.length;\n  const ptr = mallocbuf(buf, size);\n  const r = fn(ptr, size);\n  Module._wfree(ptr);\n  return r;\n}\n\n/**\n * mallocbuf allocates memory in the WASM heap and copies length bytes\n * from byteArray into the allocated location.\n * Returns the address to the allocated memory.\n *\n * @param {ArrayBuffer} byteArray\n * @param {number} size\n */\nfunction mallocbuf(byteArray, length) {\n  const offs = Module._wrealloc(0, length);\n  Module.HEAPU8.set(byteArray, offs);\n  return offs;\n}\n\n/**\n * WError represents an error from a wasm module\n */\nclass WError extends Error {\n  constructor(code, message, file, line) {\n    super(message, file || 'wasm', line || 0);\n    this.name = 'WError';\n    this.code = code;\n  }\n}\n\n/**\n * Get & clear last WErr. Returns null if there was no error.\n * Uses a descriptive name so to help in stack traces.\n */\nfunction error_from_wasm() {\n  // :WError|null\n  const code = Module._WErrGetCode();\n  if (code !== 0) {\n    const msgptr = Module._WErrGetMsg();\n    const message = msgptr != 0 ? UTF8ArrayToString(Module.HEAPU8, msgptr) : '';\n    Module._WErrClear();\n    return new WError(code, message);\n  }\n}\n\nfunction werrCheck() {\n  const err = error_from_wasm();\n  if (err) {\n    throw err;\n  }\n}\n","export default {}"],"names":["Module","_scriptDir","readyPromiseResolve","readyPromiseReject","resolve","reject","moduleOverrides","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","scriptDirectory","locateFile","path","read_","readAsync","readBinary","createRequire","__viteBrowserExternal$1","require","fs","nodePath","filename","binary","isFileURI","ret","onload","onerror","err","data","ex","ExitStatus","reason","url","xhr","wasmBinary","abort","wasmMemory","ABORT","buffer","HEAPU8","updateGlobalBufferAndViews","buf","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","addOnInit","runDependencies","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","what","e","dataURIPrefix","isDataURI","wasmBinaryFile","getBinary","file","getBinaryPromise","response","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","receiveInstantiationResult","result","instantiateArrayBuffer","receiver","instantiateAsync","status","callbacks","getHeapMax","emscripten_realloc_buffer","size","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","newSize","replacement","uleb128Encode","n","target","sigToWasmTypes","sig","typeNames","type","i","generateFuncType","sigRet","sigParam","typeCodes","convertJsFunctionToWasm","func","typeSectionBody","bytes","wrappedFunc","getWasmTableEntry","funcPtr","updateTableMap","offset","count","functionsInTableMap","item","freeTableIndexes","getEmptyTableSlot","setWasmTableEntry","idx","addFunction","wrapped","removeFunction","index","calledRun","runCaller","run","args","doRun","tmpPtr","ready","init","ParseFlags","OutputFlags","parse","source","options","parseFlags","outputFlags","onCodeBlockPtr","create_onCodeBlock_fn","as_byte_array","outbuf","withOutPtr","outptr","withTmpBytePtr","inptr","inlen","werrCheck","utf8","onCodeBlock","metaptr","metalen","lang","body","bodystr","resbuf","resptr","mallocbuf","something","enc","dec","s","b","fn","len","addr","ptr","r","byteArray","length","offs","WError","code","message","line","error_from_wasm","msgptr"],"mappings":"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"}