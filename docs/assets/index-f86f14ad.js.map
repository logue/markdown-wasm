{"version":3,"file":"index-f86f14ad.js","sources":["../../src/markdown.js","../../src/index.js","../../index.html?html-proxy&index=0.js","../../__vite-browser-external"],"sourcesContent":["\r\nvar Module = (() => {\r\n  var _scriptDir = import.meta.url;\r\n  \r\n  return (\r\nasync function(Module) {\r\n  Module = Module || {};\r\n\r\nvar Module = typeof Module != \"undefined\" ? Module : {};\r\n\r\nvar readyPromiseResolve, readyPromiseReject;\r\n\r\nModule[\"ready\"] = new Promise(function(resolve, reject) {\r\n readyPromiseResolve = resolve;\r\n readyPromiseReject = reject;\r\n});\r\n\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\n\r\nvar thisProgram = \"./this.program\";\r\n\r\nvar quit_ = (status, toThrow) => {\r\n throw toThrow;\r\n};\r\n\r\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\r\n\r\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\r\n\r\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\r\n\r\nvar scriptDirectory = \"\";\r\n\r\nfunction locateFile(path) {\r\n if (Module[\"locateFile\"]) {\r\n  return Module[\"locateFile\"](path, scriptDirectory);\r\n }\r\n return scriptDirectory + path;\r\n}\r\n\r\nvar read_, readAsync, readBinary, setWindowTitle;\r\n\r\nfunction logExceptionOnExit(e) {\r\n if (e instanceof ExitStatus) return;\r\n let toLog = e;\r\n err(\"exiting due to exception: \" + toLog);\r\n}\r\n\r\nif (ENVIRONMENT_IS_NODE) {\r\n const {createRequire: createRequire} = await import(\"module\");\r\n var require = createRequire(import.meta.url);\r\n var fs = require(\"fs\");\r\n var nodePath = require(\"path\");\r\n if (ENVIRONMENT_IS_WORKER) {\r\n  scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\r\n } else {\r\n  scriptDirectory = require(\"url\").fileURLToPath(new URL(\"./\", import.meta.url));\r\n }\r\n read_ = (filename, binary) => {\r\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\r\n  return fs.readFileSync(filename, binary ? undefined : \"utf8\");\r\n };\r\n readBinary = filename => {\r\n  var ret = read_(filename, true);\r\n  if (!ret.buffer) {\r\n   ret = new Uint8Array(ret);\r\n  }\r\n  return ret;\r\n };\r\n readAsync = (filename, onload, onerror) => {\r\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\r\n  fs.readFile(filename, function(err, data) {\r\n   if (err) onerror(err); else onload(data.buffer);\r\n  });\r\n };\r\n if (process[\"argv\"].length > 1) {\r\n  thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\r\n }\r\n arguments_ = process[\"argv\"].slice(2);\r\n process[\"on\"](\"uncaughtException\", function(ex) {\r\n  if (!(ex instanceof ExitStatus)) {\r\n   throw ex;\r\n  }\r\n });\r\n process[\"on\"](\"unhandledRejection\", function(reason) {\r\n  throw reason;\r\n });\r\n quit_ = (status, toThrow) => {\r\n  if (keepRuntimeAlive()) {\r\n   process[\"exitCode\"] = status;\r\n   throw toThrow;\r\n  }\r\n  logExceptionOnExit(toThrow);\r\n  process[\"exit\"](status);\r\n };\r\n Module[\"inspect\"] = function() {\r\n  return \"[Emscripten Module object]\";\r\n };\r\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n if (ENVIRONMENT_IS_WORKER) {\r\n  scriptDirectory = self.location.href;\r\n } else if (typeof document != \"undefined\" && document.currentScript) {\r\n  scriptDirectory = document.currentScript.src;\r\n }\r\n if (_scriptDir) {\r\n  scriptDirectory = _scriptDir;\r\n }\r\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\r\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\r\n } else {\r\n  scriptDirectory = \"\";\r\n }\r\n {\r\n  read_ = url => {\r\n   var xhr = new XMLHttpRequest();\r\n   xhr.open(\"GET\", url, false);\r\n   xhr.send(null);\r\n   return xhr.responseText;\r\n  };\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n   readBinary = url => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", url, false);\r\n    xhr.responseType = \"arraybuffer\";\r\n    xhr.send(null);\r\n    return new Uint8Array(xhr.response);\r\n   };\r\n  }\r\n  readAsync = (url, onload, onerror) => {\r\n   var xhr = new XMLHttpRequest();\r\n   xhr.open(\"GET\", url, true);\r\n   xhr.responseType = \"arraybuffer\";\r\n   xhr.onload = () => {\r\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\r\n     onload(xhr.response);\r\n     return;\r\n    }\r\n    onerror();\r\n   };\r\n   xhr.onerror = onerror;\r\n   xhr.send(null);\r\n  };\r\n }\r\n setWindowTitle = title => document.title = title;\r\n} else {}\r\n\r\nvar out = Module[\"print\"] || console.log.bind(console);\r\n\r\nvar err = Module[\"printErr\"] || console.warn.bind(console);\r\n\r\nObject.assign(Module, moduleOverrides);\r\n\r\nmoduleOverrides = null;\r\n\r\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\r\n\r\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\r\n\r\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\r\n\r\nvar wasmBinary;\r\n\r\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\r\n\r\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\r\n\r\nif (typeof WebAssembly != \"object\") {\r\n abort(\"no native wasm support detected\");\r\n}\r\n\r\nvar wasmMemory;\r\n\r\nvar ABORT = false;\r\n\r\nvar EXITSTATUS;\r\n\r\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\r\n\r\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\r\n var endIdx = idx + maxBytesToRead;\r\n var endPtr = idx;\r\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n }\r\n var str = \"\";\r\n while (idx < endPtr) {\r\n  var u0 = heapOrArray[idx++];\r\n  if (!(u0 & 128)) {\r\n   str += String.fromCharCode(u0);\r\n   continue;\r\n  }\r\n  var u1 = heapOrArray[idx++] & 63;\r\n  if ((u0 & 224) == 192) {\r\n   str += String.fromCharCode((u0 & 31) << 6 | u1);\r\n   continue;\r\n  }\r\n  var u2 = heapOrArray[idx++] & 63;\r\n  if ((u0 & 240) == 224) {\r\n   u0 = (u0 & 15) << 12 | u1 << 6 | u2;\r\n  } else {\r\n   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\r\n  }\r\n  if (u0 < 65536) {\r\n   str += String.fromCharCode(u0);\r\n  } else {\r\n   var ch = u0 - 65536;\r\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\r\n  }\r\n }\r\n return str;\r\n}\r\n\r\nfunction UTF8ToString(ptr, maxBytesToRead) {\r\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\r\n}\r\n\r\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n if (!(maxBytesToWrite > 0)) return 0;\r\n var startIdx = outIdx;\r\n var endIdx = outIdx + maxBytesToWrite - 1;\r\n for (var i = 0; i < str.length; ++i) {\r\n  var u = str.charCodeAt(i);\r\n  if (u >= 55296 && u <= 57343) {\r\n   var u1 = str.charCodeAt(++i);\r\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\r\n  }\r\n  if (u <= 127) {\r\n   if (outIdx >= endIdx) break;\r\n   heap[outIdx++] = u;\r\n  } else if (u <= 2047) {\r\n   if (outIdx + 1 >= endIdx) break;\r\n   heap[outIdx++] = 192 | u >> 6;\r\n   heap[outIdx++] = 128 | u & 63;\r\n  } else if (u <= 65535) {\r\n   if (outIdx + 2 >= endIdx) break;\r\n   heap[outIdx++] = 224 | u >> 12;\r\n   heap[outIdx++] = 128 | u >> 6 & 63;\r\n   heap[outIdx++] = 128 | u & 63;\r\n  } else {\r\n   if (outIdx + 3 >= endIdx) break;\r\n   heap[outIdx++] = 240 | u >> 18;\r\n   heap[outIdx++] = 128 | u >> 12 & 63;\r\n   heap[outIdx++] = 128 | u >> 6 & 63;\r\n   heap[outIdx++] = 128 | u & 63;\r\n  }\r\n }\r\n heap[outIdx] = 0;\r\n return outIdx - startIdx;\r\n}\r\n\r\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\r\n}\r\n\r\nfunction lengthBytesUTF8(str) {\r\n var len = 0;\r\n for (var i = 0; i < str.length; ++i) {\r\n  var c = str.charCodeAt(i);\r\n  if (c <= 127) {\r\n   len++;\r\n  } else if (c <= 2047) {\r\n   len += 2;\r\n  } else if (c >= 55296 && c <= 57343) {\r\n   len += 4;\r\n   ++i;\r\n  } else {\r\n   len += 3;\r\n  }\r\n }\r\n return len;\r\n}\r\n\r\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\r\n\r\nfunction updateGlobalBufferAndViews(buf) {\r\n buffer = buf;\r\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\r\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\r\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\r\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\r\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\r\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\r\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\r\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\r\n}\r\n\r\nvar INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\r\n\r\nvar wasmTable;\r\n\r\nvar __ATPRERUN__ = [];\r\n\r\nvar __ATINIT__ = [];\r\n\r\nvar __ATPOSTRUN__ = [];\r\n\r\nvar runtimeInitialized = false;\r\n\r\nfunction keepRuntimeAlive() {\r\n return noExitRuntime;\r\n}\r\n\r\nfunction preRun() {\r\n if (Module[\"preRun\"]) {\r\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\r\n  while (Module[\"preRun\"].length) {\r\n   addOnPreRun(Module[\"preRun\"].shift());\r\n  }\r\n }\r\n callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n runtimeInitialized = true;\r\n callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction postRun() {\r\n if (Module[\"postRun\"]) {\r\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\r\n  while (Module[\"postRun\"].length) {\r\n   addOnPostRun(Module[\"postRun\"].shift());\r\n  }\r\n }\r\n callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\nvar runDependencies = 0;\r\n\r\nvar runDependencyWatcher = null;\r\n\r\nvar dependenciesFulfilled = null;\r\n\r\nfunction addRunDependency(id) {\r\n runDependencies++;\r\n if (Module[\"monitorRunDependencies\"]) {\r\n  Module[\"monitorRunDependencies\"](runDependencies);\r\n }\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n runDependencies--;\r\n if (Module[\"monitorRunDependencies\"]) {\r\n  Module[\"monitorRunDependencies\"](runDependencies);\r\n }\r\n if (runDependencies == 0) {\r\n  if (runDependencyWatcher !== null) {\r\n   clearInterval(runDependencyWatcher);\r\n   runDependencyWatcher = null;\r\n  }\r\n  if (dependenciesFulfilled) {\r\n   var callback = dependenciesFulfilled;\r\n   dependenciesFulfilled = null;\r\n   callback();\r\n  }\r\n }\r\n}\r\n\r\nfunction abort(what) {\r\n if (Module[\"onAbort\"]) {\r\n  Module[\"onAbort\"](what);\r\n }\r\n what = \"Aborted(\" + what + \")\";\r\n err(what);\r\n ABORT = true;\r\n EXITSTATUS = 1;\r\n what += \". Build with -sASSERTIONS for more info.\";\r\n var e = new WebAssembly.RuntimeError(what);\r\n readyPromiseReject(e);\r\n throw e;\r\n}\r\n\r\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\r\n\r\nfunction isDataURI(filename) {\r\n return filename.startsWith(dataURIPrefix);\r\n}\r\n\r\nfunction isFileURI(filename) {\r\n return filename.startsWith(\"file://\");\r\n}\r\n\r\nvar wasmBinaryFile;\r\n\r\nif (Module[\"locateFile\"]) {\r\n wasmBinaryFile = \"markdown.wasm\";\r\n if (!isDataURI(wasmBinaryFile)) {\r\n  wasmBinaryFile = locateFile(wasmBinaryFile);\r\n }\r\n} else {\r\n wasmBinaryFile = new URL(\"markdown.wasm\", import.meta.url).href;\r\n}\r\n\r\nfunction getBinary(file) {\r\n try {\r\n  if (file == wasmBinaryFile && wasmBinary) {\r\n   return new Uint8Array(wasmBinary);\r\n  }\r\n  if (readBinary) {\r\n   return readBinary(file);\r\n  }\r\n  throw \"both async and sync fetching of the wasm failed\";\r\n } catch (err) {\r\n  abort(err);\r\n }\r\n}\r\n\r\nfunction getBinaryPromise() {\r\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n  if (typeof fetch == \"function\" && !isFileURI(wasmBinaryFile)) {\r\n   return fetch(wasmBinaryFile, {\r\n    credentials: \"same-origin\"\r\n   }).then(function(response) {\r\n    if (!response[\"ok\"]) {\r\n     throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\r\n    }\r\n    return response[\"arrayBuffer\"]();\r\n   }).catch(function() {\r\n    return getBinary(wasmBinaryFile);\r\n   });\r\n  } else {\r\n   if (readAsync) {\r\n    return new Promise(function(resolve, reject) {\r\n     readAsync(wasmBinaryFile, function(response) {\r\n      resolve(new Uint8Array(response));\r\n     }, reject);\r\n    });\r\n   }\r\n  }\r\n }\r\n return Promise.resolve().then(function() {\r\n  return getBinary(wasmBinaryFile);\r\n });\r\n}\r\n\r\nfunction createWasm() {\r\n var info = {\r\n  \"a\": asmLibraryArg\r\n };\r\n function receiveInstance(instance, module) {\r\n  var exports = instance.exports;\r\n  Module[\"asm\"] = exports;\r\n  wasmMemory = Module[\"asm\"][\"l\"];\r\n  updateGlobalBufferAndViews(wasmMemory.buffer);\r\n  wasmTable = Module[\"asm\"][\"t\"];\r\n  addOnInit(Module[\"asm\"][\"m\"]);\r\n  removeRunDependency(\"wasm-instantiate\");\r\n }\r\n addRunDependency(\"wasm-instantiate\");\r\n function receiveInstantiationResult(result) {\r\n  receiveInstance(result[\"instance\"]);\r\n }\r\n function instantiateArrayBuffer(receiver) {\r\n  return getBinaryPromise().then(function(binary) {\r\n   return WebAssembly.instantiate(binary, info);\r\n  }).then(function(instance) {\r\n   return instance;\r\n  }).then(receiver, function(reason) {\r\n   err(\"failed to asynchronously prepare wasm: \" + reason);\r\n   abort(reason);\r\n  });\r\n }\r\n function instantiateAsync() {\r\n  if (!wasmBinary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\r\n   return fetch(wasmBinaryFile, {\r\n    credentials: \"same-origin\"\r\n   }).then(function(response) {\r\n    var result = WebAssembly.instantiateStreaming(response, info);\r\n    return result.then(receiveInstantiationResult, function(reason) {\r\n     err(\"wasm streaming compile failed: \" + reason);\r\n     err(\"falling back to ArrayBuffer instantiation\");\r\n     return instantiateArrayBuffer(receiveInstantiationResult);\r\n    });\r\n   });\r\n  } else {\r\n   return instantiateArrayBuffer(receiveInstantiationResult);\r\n  }\r\n }\r\n if (Module[\"instantiateWasm\"]) {\r\n  try {\r\n   var exports = Module[\"instantiateWasm\"](info, receiveInstance);\r\n   return exports;\r\n  } catch (e) {\r\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\r\n   readyPromiseReject(e);\r\n  }\r\n }\r\n instantiateAsync().catch(readyPromiseReject);\r\n return {};\r\n}\r\n\r\nfunction ExitStatus(status) {\r\n this.name = \"ExitStatus\";\r\n this.message = \"Program terminated with exit(\" + status + \")\";\r\n this.status = status;\r\n}\r\n\r\nfunction callRuntimeCallbacks(callbacks) {\r\n while (callbacks.length > 0) {\r\n  callbacks.shift()(Module);\r\n }\r\n}\r\n\r\nfunction __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\r\n\r\nfunction getShiftFromSize(size) {\r\n switch (size) {\r\n case 1:\r\n  return 0;\r\n\r\n case 2:\r\n  return 1;\r\n\r\n case 4:\r\n  return 2;\r\n\r\n case 8:\r\n  return 3;\r\n\r\n default:\r\n  throw new TypeError(\"Unknown type size: \" + size);\r\n }\r\n}\r\n\r\nfunction embind_init_charCodes() {\r\n var codes = new Array(256);\r\n for (var i = 0; i < 256; ++i) {\r\n  codes[i] = String.fromCharCode(i);\r\n }\r\n embind_charCodes = codes;\r\n}\r\n\r\nvar embind_charCodes = undefined;\r\n\r\nfunction readLatin1String(ptr) {\r\n var ret = \"\";\r\n var c = ptr;\r\n while (HEAPU8[c]) {\r\n  ret += embind_charCodes[HEAPU8[c++]];\r\n }\r\n return ret;\r\n}\r\n\r\nvar awaitingDependencies = {};\r\n\r\nvar registeredTypes = {};\r\n\r\nvar typeDependencies = {};\r\n\r\nvar char_0 = 48;\r\n\r\nvar char_9 = 57;\r\n\r\nfunction makeLegalFunctionName(name) {\r\n if (undefined === name) {\r\n  return \"_unknown\";\r\n }\r\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\r\n var f = name.charCodeAt(0);\r\n if (f >= char_0 && f <= char_9) {\r\n  return \"_\" + name;\r\n }\r\n return name;\r\n}\r\n\r\nfunction createNamedFunction(name, body) {\r\n name = makeLegalFunctionName(name);\r\n return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\r\n}\r\n\r\nfunction extendError(baseErrorType, errorName) {\r\n var errorClass = createNamedFunction(errorName, function(message) {\r\n  this.name = errorName;\r\n  this.message = message;\r\n  var stack = new Error(message).stack;\r\n  if (stack !== undefined) {\r\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\r\n  }\r\n });\r\n errorClass.prototype = Object.create(baseErrorType.prototype);\r\n errorClass.prototype.constructor = errorClass;\r\n errorClass.prototype.toString = function() {\r\n  if (this.message === undefined) {\r\n   return this.name;\r\n  } else {\r\n   return this.name + \": \" + this.message;\r\n  }\r\n };\r\n return errorClass;\r\n}\r\n\r\nvar BindingError = undefined;\r\n\r\nfunction throwBindingError(message) {\r\n throw new BindingError(message);\r\n}\r\n\r\nvar InternalError = undefined;\r\n\r\nfunction registerType(rawType, registeredInstance, options = {}) {\r\n if (!(\"argPackAdvance\" in registeredInstance)) {\r\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\r\n }\r\n var name = registeredInstance.name;\r\n if (!rawType) {\r\n  throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\r\n }\r\n if (registeredTypes.hasOwnProperty(rawType)) {\r\n  if (options.ignoreDuplicateRegistrations) {\r\n   return;\r\n  } else {\r\n   throwBindingError(\"Cannot register type '\" + name + \"' twice\");\r\n  }\r\n }\r\n registeredTypes[rawType] = registeredInstance;\r\n delete typeDependencies[rawType];\r\n if (awaitingDependencies.hasOwnProperty(rawType)) {\r\n  var callbacks = awaitingDependencies[rawType];\r\n  delete awaitingDependencies[rawType];\r\n  callbacks.forEach(cb => cb());\r\n }\r\n}\r\n\r\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\r\n var shift = getShiftFromSize(size);\r\n name = readLatin1String(name);\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": function(wt) {\r\n   return !!wt;\r\n  },\r\n  \"toWireType\": function(destructors, o) {\r\n   return o ? trueValue : falseValue;\r\n  },\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": function(pointer) {\r\n   var heap;\r\n   if (size === 1) {\r\n    heap = HEAP8;\r\n   } else if (size === 2) {\r\n    heap = HEAP16;\r\n   } else if (size === 4) {\r\n    heap = HEAP32;\r\n   } else {\r\n    throw new TypeError(\"Unknown boolean type size: \" + name);\r\n   }\r\n   return this[\"fromWireType\"](heap[pointer >> shift]);\r\n  },\r\n  destructorFunction: null\r\n });\r\n}\r\n\r\nvar emval_free_list = [];\r\n\r\nvar emval_handle_array = [ {}, {\r\n value: undefined\r\n}, {\r\n value: null\r\n}, {\r\n value: true\r\n}, {\r\n value: false\r\n} ];\r\n\r\nfunction __emval_decref(handle) {\r\n if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\r\n  emval_handle_array[handle] = undefined;\r\n  emval_free_list.push(handle);\r\n }\r\n}\r\n\r\nfunction count_emval_handles() {\r\n var count = 0;\r\n for (var i = 5; i < emval_handle_array.length; ++i) {\r\n  if (emval_handle_array[i] !== undefined) {\r\n   ++count;\r\n  }\r\n }\r\n return count;\r\n}\r\n\r\nfunction get_first_emval() {\r\n for (var i = 5; i < emval_handle_array.length; ++i) {\r\n  if (emval_handle_array[i] !== undefined) {\r\n   return emval_handle_array[i];\r\n  }\r\n }\r\n return null;\r\n}\r\n\r\nfunction init_emval() {\r\n Module[\"count_emval_handles\"] = count_emval_handles;\r\n Module[\"get_first_emval\"] = get_first_emval;\r\n}\r\n\r\nvar Emval = {\r\n toValue: handle => {\r\n  if (!handle) {\r\n   throwBindingError(\"Cannot use deleted val. handle = \" + handle);\r\n  }\r\n  return emval_handle_array[handle].value;\r\n },\r\n toHandle: value => {\r\n  switch (value) {\r\n  case undefined:\r\n   return 1;\r\n\r\n  case null:\r\n   return 2;\r\n\r\n  case true:\r\n   return 3;\r\n\r\n  case false:\r\n   return 4;\r\n\r\n  default:\r\n   {\r\n    var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\r\n    emval_handle_array[handle] = {\r\n     refcount: 1,\r\n     value: value\r\n    };\r\n    return handle;\r\n   }\r\n  }\r\n }\r\n};\r\n\r\nfunction simpleReadValueFromPointer(pointer) {\r\n return this[\"fromWireType\"](HEAP32[pointer >> 2]);\r\n}\r\n\r\nfunction __embind_register_emval(rawType, name) {\r\n name = readLatin1String(name);\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": function(handle) {\r\n   var rv = Emval.toValue(handle);\r\n   __emval_decref(handle);\r\n   return rv;\r\n  },\r\n  \"toWireType\": function(destructors, value) {\r\n   return Emval.toHandle(value);\r\n  },\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": simpleReadValueFromPointer,\r\n  destructorFunction: null\r\n });\r\n}\r\n\r\nfunction floatReadValueFromPointer(name, shift) {\r\n switch (shift) {\r\n case 2:\r\n  return function(pointer) {\r\n   return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\r\n  };\r\n\r\n case 3:\r\n  return function(pointer) {\r\n   return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\r\n  };\r\n\r\n default:\r\n  throw new TypeError(\"Unknown float type: \" + name);\r\n }\r\n}\r\n\r\nfunction __embind_register_float(rawType, name, size) {\r\n var shift = getShiftFromSize(size);\r\n name = readLatin1String(name);\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": function(value) {\r\n   return value;\r\n  },\r\n  \"toWireType\": function(destructors, value) {\r\n   return value;\r\n  },\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\r\n  destructorFunction: null\r\n });\r\n}\r\n\r\nfunction integerReadValueFromPointer(name, shift, signed) {\r\n switch (shift) {\r\n case 0:\r\n  return signed ? function readS8FromPointer(pointer) {\r\n   return HEAP8[pointer];\r\n  } : function readU8FromPointer(pointer) {\r\n   return HEAPU8[pointer];\r\n  };\r\n\r\n case 1:\r\n  return signed ? function readS16FromPointer(pointer) {\r\n   return HEAP16[pointer >> 1];\r\n  } : function readU16FromPointer(pointer) {\r\n   return HEAPU16[pointer >> 1];\r\n  };\r\n\r\n case 2:\r\n  return signed ? function readS32FromPointer(pointer) {\r\n   return HEAP32[pointer >> 2];\r\n  } : function readU32FromPointer(pointer) {\r\n   return HEAPU32[pointer >> 2];\r\n  };\r\n\r\n default:\r\n  throw new TypeError(\"Unknown integer type: \" + name);\r\n }\r\n}\r\n\r\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\r\n name = readLatin1String(name);\r\n if (maxRange === -1) {\r\n  maxRange = 4294967295;\r\n }\r\n var shift = getShiftFromSize(size);\r\n var fromWireType = value => value;\r\n if (minRange === 0) {\r\n  var bitshift = 32 - 8 * size;\r\n  fromWireType = value => value << bitshift >>> bitshift;\r\n }\r\n var isUnsignedType = name.includes(\"unsigned\");\r\n var checkAssertions = (value, toTypeName) => {};\r\n var toWireType;\r\n if (isUnsignedType) {\r\n  toWireType = function(destructors, value) {\r\n   checkAssertions(value, this.name);\r\n   return value >>> 0;\r\n  };\r\n } else {\r\n  toWireType = function(destructors, value) {\r\n   checkAssertions(value, this.name);\r\n   return value;\r\n  };\r\n }\r\n registerType(primitiveType, {\r\n  name: name,\r\n  \"fromWireType\": fromWireType,\r\n  \"toWireType\": toWireType,\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\r\n  destructorFunction: null\r\n });\r\n}\r\n\r\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\r\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\r\n var TA = typeMapping[dataTypeIndex];\r\n function decodeMemoryView(handle) {\r\n  handle = handle >> 2;\r\n  var heap = HEAPU32;\r\n  var size = heap[handle];\r\n  var data = heap[handle + 1];\r\n  return new TA(buffer, data, size);\r\n }\r\n name = readLatin1String(name);\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": decodeMemoryView,\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": decodeMemoryView\r\n }, {\r\n  ignoreDuplicateRegistrations: true\r\n });\r\n}\r\n\r\nfunction __embind_register_std_string(rawType, name) {\r\n name = readLatin1String(name);\r\n var stdStringIsUTF8 = name === \"std::string\";\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": function(value) {\r\n   var length = HEAPU32[value >> 2];\r\n   var payload = value + 4;\r\n   var str;\r\n   if (stdStringIsUTF8) {\r\n    var decodeStartPtr = payload;\r\n    for (var i = 0; i <= length; ++i) {\r\n     var currentBytePtr = payload + i;\r\n     if (i == length || HEAPU8[currentBytePtr] == 0) {\r\n      var maxRead = currentBytePtr - decodeStartPtr;\r\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\r\n      if (str === undefined) {\r\n       str = stringSegment;\r\n      } else {\r\n       str += String.fromCharCode(0);\r\n       str += stringSegment;\r\n      }\r\n      decodeStartPtr = currentBytePtr + 1;\r\n     }\r\n    }\r\n   } else {\r\n    var a = new Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n     a[i] = String.fromCharCode(HEAPU8[payload + i]);\r\n    }\r\n    str = a.join(\"\");\r\n   }\r\n   _free(value);\r\n   return str;\r\n  },\r\n  \"toWireType\": function(destructors, value) {\r\n   if (value instanceof ArrayBuffer) {\r\n    value = new Uint8Array(value);\r\n   }\r\n   var length;\r\n   var valueIsOfTypeString = typeof value == \"string\";\r\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\r\n    throwBindingError(\"Cannot pass non-string to std::string\");\r\n   }\r\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\r\n    length = lengthBytesUTF8(value);\r\n   } else {\r\n    length = value.length;\r\n   }\r\n   var base = _malloc(4 + length + 1);\r\n   var ptr = base + 4;\r\n   HEAPU32[base >> 2] = length;\r\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\r\n    stringToUTF8(value, ptr, length + 1);\r\n   } else {\r\n    if (valueIsOfTypeString) {\r\n     for (var i = 0; i < length; ++i) {\r\n      var charCode = value.charCodeAt(i);\r\n      if (charCode > 255) {\r\n       _free(ptr);\r\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\r\n      }\r\n      HEAPU8[ptr + i] = charCode;\r\n     }\r\n    } else {\r\n     for (var i = 0; i < length; ++i) {\r\n      HEAPU8[ptr + i] = value[i];\r\n     }\r\n    }\r\n   }\r\n   if (destructors !== null) {\r\n    destructors.push(_free, base);\r\n   }\r\n   return base;\r\n  },\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": simpleReadValueFromPointer,\r\n  destructorFunction: function(ptr) {\r\n   _free(ptr);\r\n  }\r\n });\r\n}\r\n\r\nvar UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\r\n\r\nfunction UTF16ToString(ptr, maxBytesToRead) {\r\n var endPtr = ptr;\r\n var idx = endPtr >> 1;\r\n var maxIdx = idx + maxBytesToRead / 2;\r\n while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\r\n endPtr = idx << 1;\r\n if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\r\n var str = \"\";\r\n for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\r\n  var codeUnit = HEAP16[ptr + i * 2 >> 1];\r\n  if (codeUnit == 0) break;\r\n  str += String.fromCharCode(codeUnit);\r\n }\r\n return str;\r\n}\r\n\r\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\r\n if (maxBytesToWrite === undefined) {\r\n  maxBytesToWrite = 2147483647;\r\n }\r\n if (maxBytesToWrite < 2) return 0;\r\n maxBytesToWrite -= 2;\r\n var startPtr = outPtr;\r\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\r\n for (var i = 0; i < numCharsToWrite; ++i) {\r\n  var codeUnit = str.charCodeAt(i);\r\n  HEAP16[outPtr >> 1] = codeUnit;\r\n  outPtr += 2;\r\n }\r\n HEAP16[outPtr >> 1] = 0;\r\n return outPtr - startPtr;\r\n}\r\n\r\nfunction lengthBytesUTF16(str) {\r\n return str.length * 2;\r\n}\r\n\r\nfunction UTF32ToString(ptr, maxBytesToRead) {\r\n var i = 0;\r\n var str = \"\";\r\n while (!(i >= maxBytesToRead / 4)) {\r\n  var utf32 = HEAP32[ptr + i * 4 >> 2];\r\n  if (utf32 == 0) break;\r\n  ++i;\r\n  if (utf32 >= 65536) {\r\n   var ch = utf32 - 65536;\r\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\r\n  } else {\r\n   str += String.fromCharCode(utf32);\r\n  }\r\n }\r\n return str;\r\n}\r\n\r\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\r\n if (maxBytesToWrite === undefined) {\r\n  maxBytesToWrite = 2147483647;\r\n }\r\n if (maxBytesToWrite < 4) return 0;\r\n var startPtr = outPtr;\r\n var endPtr = startPtr + maxBytesToWrite - 4;\r\n for (var i = 0; i < str.length; ++i) {\r\n  var codeUnit = str.charCodeAt(i);\r\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\r\n   var trailSurrogate = str.charCodeAt(++i);\r\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\r\n  }\r\n  HEAP32[outPtr >> 2] = codeUnit;\r\n  outPtr += 4;\r\n  if (outPtr + 4 > endPtr) break;\r\n }\r\n HEAP32[outPtr >> 2] = 0;\r\n return outPtr - startPtr;\r\n}\r\n\r\nfunction lengthBytesUTF32(str) {\r\n var len = 0;\r\n for (var i = 0; i < str.length; ++i) {\r\n  var codeUnit = str.charCodeAt(i);\r\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\r\n  len += 4;\r\n }\r\n return len;\r\n}\r\n\r\nfunction __embind_register_std_wstring(rawType, charSize, name) {\r\n name = readLatin1String(name);\r\n var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\r\n if (charSize === 2) {\r\n  decodeString = UTF16ToString;\r\n  encodeString = stringToUTF16;\r\n  lengthBytesUTF = lengthBytesUTF16;\r\n  getHeap = () => HEAPU16;\r\n  shift = 1;\r\n } else if (charSize === 4) {\r\n  decodeString = UTF32ToString;\r\n  encodeString = stringToUTF32;\r\n  lengthBytesUTF = lengthBytesUTF32;\r\n  getHeap = () => HEAPU32;\r\n  shift = 2;\r\n }\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": function(value) {\r\n   var length = HEAPU32[value >> 2];\r\n   var HEAP = getHeap();\r\n   var str;\r\n   var decodeStartPtr = value + 4;\r\n   for (var i = 0; i <= length; ++i) {\r\n    var currentBytePtr = value + 4 + i * charSize;\r\n    if (i == length || HEAP[currentBytePtr >> shift] == 0) {\r\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\r\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\r\n     if (str === undefined) {\r\n      str = stringSegment;\r\n     } else {\r\n      str += String.fromCharCode(0);\r\n      str += stringSegment;\r\n     }\r\n     decodeStartPtr = currentBytePtr + charSize;\r\n    }\r\n   }\r\n   _free(value);\r\n   return str;\r\n  },\r\n  \"toWireType\": function(destructors, value) {\r\n   if (!(typeof value == \"string\")) {\r\n    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\r\n   }\r\n   var length = lengthBytesUTF(value);\r\n   var ptr = _malloc(4 + length + charSize);\r\n   HEAPU32[ptr >> 2] = length >> shift;\r\n   encodeString(value, ptr + 4, length + charSize);\r\n   if (destructors !== null) {\r\n    destructors.push(_free, ptr);\r\n   }\r\n   return ptr;\r\n  },\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": simpleReadValueFromPointer,\r\n  destructorFunction: function(ptr) {\r\n   _free(ptr);\r\n  }\r\n });\r\n}\r\n\r\nfunction __embind_register_void(rawType, name) {\r\n name = readLatin1String(name);\r\n registerType(rawType, {\r\n  isVoid: true,\r\n  name: name,\r\n  \"argPackAdvance\": 0,\r\n  \"fromWireType\": function() {\r\n   return undefined;\r\n  },\r\n  \"toWireType\": function(destructors, o) {\r\n   return undefined;\r\n  }\r\n });\r\n}\r\n\r\nfunction _emscripten_memcpy_big(dest, src, num) {\r\n HEAPU8.copyWithin(dest, src, src + num);\r\n}\r\n\r\nfunction getHeapMax() {\r\n return 2147483648;\r\n}\r\n\r\nfunction emscripten_realloc_buffer(size) {\r\n try {\r\n  wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\r\n  updateGlobalBufferAndViews(wasmMemory.buffer);\r\n  return 1;\r\n } catch (e) {}\r\n}\r\n\r\nfunction _emscripten_resize_heap(requestedSize) {\r\n var oldSize = HEAPU8.length;\r\n requestedSize = requestedSize >>> 0;\r\n var maxHeapSize = getHeapMax();\r\n if (requestedSize > maxHeapSize) {\r\n  return false;\r\n }\r\n let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\r\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\r\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n  var replacement = emscripten_realloc_buffer(newSize);\r\n  if (replacement) {\r\n   return true;\r\n  }\r\n }\r\n return false;\r\n}\r\n\r\nfunction uleb128Encode(n, target) {\r\n if (n < 128) {\r\n  target.push(n);\r\n } else {\r\n  target.push(n % 128 | 128, n >> 7);\r\n }\r\n}\r\n\r\nfunction sigToWasmTypes(sig) {\r\n var typeNames = {\r\n  \"i\": \"i32\",\r\n  \"j\": \"i32\",\r\n  \"f\": \"f32\",\r\n  \"d\": \"f64\",\r\n  \"p\": \"i32\"\r\n };\r\n var type = {\r\n  parameters: [],\r\n  results: sig[0] == \"v\" ? [] : [ typeNames[sig[0]] ]\r\n };\r\n for (var i = 1; i < sig.length; ++i) {\r\n  type.parameters.push(typeNames[sig[i]]);\r\n  if (sig[i] === \"j\") {\r\n   type.parameters.push(\"i32\");\r\n  }\r\n }\r\n return type;\r\n}\r\n\r\nfunction generateFuncType(sig, target) {\r\n var sigRet = sig.slice(0, 1);\r\n var sigParam = sig.slice(1);\r\n var typeCodes = {\r\n  \"i\": 127,\r\n  \"p\": 127,\r\n  \"j\": 126,\r\n  \"f\": 125,\r\n  \"d\": 124\r\n };\r\n target.push(96);\r\n uleb128Encode(sigParam.length, target);\r\n for (var i = 0; i < sigParam.length; ++i) {\r\n  target.push(typeCodes[sigParam[i]]);\r\n }\r\n if (sigRet == \"v\") {\r\n  target.push(0);\r\n } else {\r\n  target.push(1, typeCodes[sigRet]);\r\n }\r\n}\r\n\r\nfunction convertJsFunctionToWasm(func, sig) {\r\n if (typeof WebAssembly.Function == \"function\") {\r\n  return new WebAssembly.Function(sigToWasmTypes(sig), func);\r\n }\r\n var typeSectionBody = [ 1 ];\r\n generateFuncType(sig, typeSectionBody);\r\n var bytes = [ 0, 97, 115, 109, 1, 0, 0, 0, 1 ];\r\n uleb128Encode(typeSectionBody.length, bytes);\r\n bytes.push.apply(bytes, typeSectionBody);\r\n bytes.push(2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0);\r\n var module = new WebAssembly.Module(new Uint8Array(bytes));\r\n var instance = new WebAssembly.Instance(module, {\r\n  \"e\": {\r\n   \"f\": func\r\n  }\r\n });\r\n var wrappedFunc = instance.exports[\"f\"];\r\n return wrappedFunc;\r\n}\r\n\r\nvar wasmTableMirror = [];\r\n\r\nfunction getWasmTableEntry(funcPtr) {\r\n var func = wasmTableMirror[funcPtr];\r\n if (!func) {\r\n  if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n  wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n }\r\n return func;\r\n}\r\n\r\nfunction updateTableMap(offset, count) {\r\n if (functionsInTableMap) {\r\n  for (var i = offset; i < offset + count; i++) {\r\n   var item = getWasmTableEntry(i);\r\n   if (item) {\r\n    functionsInTableMap.set(item, i);\r\n   }\r\n  }\r\n }\r\n}\r\n\r\nvar functionsInTableMap = undefined;\r\n\r\nvar freeTableIndexes = [];\r\n\r\nfunction getEmptyTableSlot() {\r\n if (freeTableIndexes.length) {\r\n  return freeTableIndexes.pop();\r\n }\r\n try {\r\n  wasmTable.grow(1);\r\n } catch (err) {\r\n  if (!(err instanceof RangeError)) {\r\n   throw err;\r\n  }\r\n  throw \"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";\r\n }\r\n return wasmTable.length - 1;\r\n}\r\n\r\nfunction setWasmTableEntry(idx, func) {\r\n wasmTable.set(idx, func);\r\n wasmTableMirror[idx] = wasmTable.get(idx);\r\n}\r\n\r\nfunction addFunction(func, sig) {\r\n if (!functionsInTableMap) {\r\n  functionsInTableMap = new WeakMap();\r\n  updateTableMap(0, wasmTable.length);\r\n }\r\n if (functionsInTableMap.has(func)) {\r\n  return functionsInTableMap.get(func);\r\n }\r\n var ret = getEmptyTableSlot();\r\n try {\r\n  setWasmTableEntry(ret, func);\r\n } catch (err) {\r\n  if (!(err instanceof TypeError)) {\r\n   throw err;\r\n  }\r\n  var wrapped = convertJsFunctionToWasm(func, sig);\r\n  setWasmTableEntry(ret, wrapped);\r\n }\r\n functionsInTableMap.set(func, ret);\r\n return ret;\r\n}\r\n\r\nfunction removeFunction(index) {\r\n functionsInTableMap.delete(getWasmTableEntry(index));\r\n freeTableIndexes.push(index);\r\n}\r\n\r\nembind_init_charCodes();\r\n\r\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\r\n\r\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\r\n\r\ninit_emval();\r\n\r\nvar asmLibraryArg = {\r\n \"i\": __embind_register_bigint,\r\n \"j\": __embind_register_bool,\r\n \"h\": __embind_register_emval,\r\n \"e\": __embind_register_float,\r\n \"b\": __embind_register_integer,\r\n \"a\": __embind_register_memory_view,\r\n \"d\": __embind_register_std_string,\r\n \"c\": __embind_register_std_wstring,\r\n \"k\": __embind_register_void,\r\n \"g\": _emscripten_memcpy_big,\r\n \"f\": _emscripten_resize_heap\r\n};\r\n\r\nvar asm = createWasm();\r\n\r\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\r\n return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"m\"]).apply(null, arguments);\r\n};\r\n\r\nvar _wrealloc = Module[\"_wrealloc\"] = function() {\r\n return (_wrealloc = Module[\"_wrealloc\"] = Module[\"asm\"][\"n\"]).apply(null, arguments);\r\n};\r\n\r\nvar _wfree = Module[\"_wfree\"] = function() {\r\n return (_wfree = Module[\"_wfree\"] = Module[\"asm\"][\"o\"]).apply(null, arguments);\r\n};\r\n\r\nvar _free = Module[\"_free\"] = function() {\r\n return (_free = Module[\"_free\"] = Module[\"asm\"][\"p\"]).apply(null, arguments);\r\n};\r\n\r\nvar _WErrGetCode = Module[\"_WErrGetCode\"] = function() {\r\n return (_WErrGetCode = Module[\"_WErrGetCode\"] = Module[\"asm\"][\"q\"]).apply(null, arguments);\r\n};\r\n\r\nvar _WErrGetMsg = Module[\"_WErrGetMsg\"] = function() {\r\n return (_WErrGetMsg = Module[\"_WErrGetMsg\"] = Module[\"asm\"][\"r\"]).apply(null, arguments);\r\n};\r\n\r\nvar _WErrClear = Module[\"_WErrClear\"] = function() {\r\n return (_WErrClear = Module[\"_WErrClear\"] = Module[\"asm\"][\"s\"]).apply(null, arguments);\r\n};\r\n\r\nvar _parseUTF8 = Module[\"_parseUTF8\"] = function() {\r\n return (_parseUTF8 = Module[\"_parseUTF8\"] = Module[\"asm\"][\"u\"]).apply(null, arguments);\r\n};\r\n\r\nvar _malloc = Module[\"_malloc\"] = function() {\r\n return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"v\"]).apply(null, arguments);\r\n};\r\n\r\nvar ___getTypeName = Module[\"___getTypeName\"] = function() {\r\n return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"w\"]).apply(null, arguments);\r\n};\r\n\r\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = function() {\r\n return (__embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = Module[\"asm\"][\"x\"]).apply(null, arguments);\r\n};\r\n\r\nModule[\"addOnPostRun\"] = addOnPostRun;\r\n\r\nModule[\"addFunction\"] = addFunction;\r\n\r\nModule[\"removeFunction\"] = removeFunction;\r\n\r\nvar calledRun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n if (!calledRun) run();\r\n if (!calledRun) dependenciesFulfilled = runCaller;\r\n};\r\n\r\nfunction run(args) {\r\n args = args || arguments_;\r\n if (runDependencies > 0) {\r\n  return;\r\n }\r\n preRun();\r\n if (runDependencies > 0) {\r\n  return;\r\n }\r\n function doRun() {\r\n  if (calledRun) return;\r\n  calledRun = true;\r\n  Module[\"calledRun\"] = true;\r\n  if (ABORT) return;\r\n  initRuntime();\r\n  readyPromiseResolve(Module);\r\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\r\n  postRun();\r\n }\r\n if (Module[\"setStatus\"]) {\r\n  Module[\"setStatus\"](\"Running...\");\r\n  setTimeout(function() {\r\n   setTimeout(function() {\r\n    Module[\"setStatus\"](\"\");\r\n   }, 1);\r\n   doRun();\r\n  }, 1);\r\n } else {\r\n  doRun();\r\n }\r\n}\r\n\r\nif (Module[\"preInit\"]) {\r\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\r\n while (Module[\"preInit\"].length > 0) {\r\n  Module[\"preInit\"].pop()();\r\n }\r\n}\r\n\r\nrun();\r\n\r\n\r\n  return Module.ready\r\n}\r\n);\r\n})();\r\nexport default Module;","import init from './markdown.js';\n\nlet Module;\n/** used by strFromUTF8Ptr as a temporary address-sized integer */\nlet tmpPtr = 0;\n\n/** Initialize Function */\nexport const ready = async () => {\n  Module = await init();\n\n  Module.addOnPostRun(() => {\n    tmpPtr = Module._wrealloc(0, 4);\n  });\n\n  return await Module.ready;\n};\n\n/** @type {Array<string, number>} - ParseFlags */\nexport const ParseFlags = {\n  /** In TEXT, collapse non-trivial whitespace into single ' ' */\n  COLLAPSE_WHITESPACE: 0x0001,\n  /** Do not require space in ATX headers ( ###header ) */\n  PERMISSIVE_ATX_HEADERS: 0x0002,\n  /** Recognize URLs as links even without <...> */\n  PERMISSIVE_URL_AUTO_LINKS: 0x0004,\n  /** Recognize e-mails as links even without <...> */\n  PERMISSIVE_EMAIL_AUTO_LINKS: 0x0008,\n  /** Disable indented code blocks. (Only fenced code works) */\n  NO_INDENTED_CODE_BLOCKS: 0x0010,\n  /** Disable raw HTML blocks. */\n  NO_HTML_BLOCKS: 0x0020,\n  /** Disable raw HTML (inline). */\n  NO_HTML_SPANS: 0x0040,\n  /** Enable tables extension. */\n  TABLES: 0x0100,\n  /** Enable strikethrough extension. */\n  STRIKETHROUGH: 0x0200,\n  /** Enable WWW autolinks (without proto; just 'www.') */\n  PERMISSIVE_WWW_AUTOLINKS: 0x0400,\n  /** Enable task list extension. */\n  TASK_LISTS: 0x0800,\n  /** Enable $ and $$ containing LaTeX equations. */\n  LATEX_MATH_SPANS: 0x1000,\n  /** Enable wiki links extension. */\n  WIKI_LINKS: 0x2000,\n  /** Enable underline extension (disables '_' for emphasis) */\n  UNDERLINE: 0x4000,\n\n  /** Default flags */\n  DEFAULT: 0x0001 | 0x0002 | 0x0004 | 0x0200 | 0x0100 | 0x0800,\n  // COLLAPSE_WHITESPACE\n  // PERMISSIVE_ATX_HEADERS\n  // PERMISSIVE_URL_AUTO_LINKS\n  // STRIKETHROUGH\n  // TABLES\n  // TASK_LISTS\n\n  /** No HTML */\n  NO_HTML: 0x0020 | 0x0040, // NO_HTML_BLOCKS | NO_HTML_SPANS\n\n  /** Commonmark Comply */\n  COMMONMARK: 0,\n  /** Github Style */\n  GITHUB: 0x0004 | 0x0100 | 0x0200 | 0x0800, // PERMISSIVE_URL_AUTO_LINKS | TABLES | STRIKETHROUGH | TASK_LISTS\n};\n\n/** @type {Record<string, number>} these should be in sync with \"OutputFlags\" in common.h */\nexport const OutputFlags = {\n  /** Output HTML */\n  HTML: 1 << 0,\n  /** Output XHTML (only has effect with HTML flag set)  */\n  XHTML: 1 << 1,\n  /** Allow \"javascript:\" URIs */\n  AllowJSURI: 1 << 2,\n};\n\n/**\n * Parse markdown\n *\n * @param {string | ArrayLike<number>} source - markdown text\n * @param {object} options - Parser options\n *\n * @returns {string | Uint8Array}\n */\nexport function parse(source, options) {\n  options = options || {};\n\n  const parseFlags =\n    options.parseFlags === undefined\n      ? ParseFlags.COMMONMARK\n      : options.parseFlags;\n\n  let outputFlags = options.allowJSURIs ? OutputFlags.AllowJSURI : 0;\n\n  switch (options.format) {\n    case 'xhtml':\n      outputFlags |= OutputFlags.HTML | OutputFlags.XHTML;\n      break;\n\n    case 'html':\n    case undefined:\n    case null:\n    case '':\n      outputFlags |= OutputFlags.HTML;\n      break;\n\n    default:\n      throw new Error(`[markdown-wasm] invalid format \"${options.format}\"`);\n  }\n\n  const onCodeBlockPtr = options.onCodeBlock\n    ? create_onCodeBlock_fn(options.onCodeBlock)\n    : 0;\n\n  const buf = as_byte_array(source);\n  const outbuf = withOutPtr(outptr =>\n    withTmpBytePtr(buf, (inptr, inlen) =>\n      Module._parseUTF8(\n        inptr,\n        inlen,\n        parseFlags,\n        outputFlags,\n        outptr,\n        onCodeBlockPtr\n      )\n    )\n  );\n\n  if (options.onCodeBlock) {\n    Module.removeFunction(onCodeBlockPtr);\n  }\n\n  // check for error and throw if needed\n  werrCheck();\n\n  // DEBUG\n  // if (outbuf) {\n  //   console.log(utf8.decode(outbuf))\n  // }\n\n  if (options.bytes) {\n    return outbuf;\n  }\n\n  return utf8.decode(outbuf);\n}\n\n/**\n * Function's C type: JSTextFilterFun\n * (metaptr ptr, metalen ptr, inptr ptr, inlen ptr, outptr ptr) -> outlen int\n *\n * Interacting-with-code.html#calling-javascript-functions-as-function-pointers-from-c\n * @see {@link https://emscripten.org/docs/porting/connecting_cpp_and_javascript/}\n *\n * @param {*} onCodeBlock\n */\nasync function create_onCodeBlock_fn(onCodeBlock) {\n  const fnptr = Module.addFunction((metaptr, metalen, inptr, inlen, outptr) => {\n    try {\n      // lang is the \"language\" tag, if any, provided with the code block\n      const lang =\n        metalen > 0\n          ? utf8.decode(HEAPU8.subarray(metaptr, metaptr + metalen))\n          : '';\n\n      // body is a view into heap memory of the segment of source (UTF8 bytes)\n      const body = HEAPU8.subarray(inptr, inptr + inlen);\n      let bodystr = undefined;\n      body.toString = () => bodystr || (bodystr = utf8.decode(body));\n\n      // result is the result from the onCodeBlock function\n      let result = null;\n      result = onCodeBlock(lang, body);\n\n      if (result === null || result === undefined) {\n        // Callback indicates that it does not wish to filter.\n        // The md.c implementation will html-encode the body.\n        return -1;\n      }\n\n      let resbuf = as_byte_array(result);\n      if (resbuf.length > 0) {\n        // copy resbuf to WASM heap memory\n        const resptr = mallocbuf(resbuf, resbuf.length);\n        // write pointer value\n        HEAPU32[outptr >> 2 /* == outptr / 4 */] = resptr;\n        // Note: fmt_html.c calls free(resptr)\n      }\n\n      return resbuf.length;\n    } catch (err) {\n      console.error(\n        `error in markdown onCodeBlock callback: ${err.stack || err}`\n      );\n      return -1;\n    }\n  }, 'iiiiii');\n  return fnptr;\n}\n\n/**\n * to Byte Array\n * @param {number[] | string} something\n *\n * @returns {Uint8Array}\n */\nfunction as_byte_array(something) {\n  if (typeof something == 'string') return utf8.encode(something);\n  if (something instanceof Uint8Array) return something;\n  return new Uint8Array(something);\n}\n\n/**\n * interface utf8 {\n *   encode(s :string) :Uint8Array\n *   decode(b :Uint8Array) :string\n * }\n */\nconst utf8 = (() => {\n  const enc = new TextEncoder('utf-8');\n  const dec = new TextDecoder('utf-8');\n  return {\n    encode: s => enc.encode(s),\n    decode: b => dec.decode(b),\n  };\n})();\n\n/**\n * withOutPtr facilitates the following:\n * 1. calls fn with an address to memory that fits a pointer.\n *     fn(outptr) is expected to:\n *     a. Write some data into heap memory\n *     b. Write the address of that data at outptr (i.e. *outptr = heapaddr)\n *     c. Return the length of data written\n *\n *  2. withOutPtr reads the address from outptr\n *     a. If the address is 0 (NULL), returns null\n *     b. Else a slice of the heap memory is created, starting at *outptr\n *        and ending at ((*outptr) + length_returned_by_fn).\n *        A free() function is added to the buffer and it is returned.\n *\n *  It is important to free() the memory of the returned buffer when the caller is done.\n *  This is implementation specific, so this function can not help you with that.\n *\n *  The return type is as follows:\n *    interface HeapData extends Uint8Array {\n *      readonly heapAddr :number  // address in heap == *outptr\n *    }\n *\n * @param {Function} fn\n *\n * @example\n *    // WASM module, in C:\n *    typedef struct Color_ { char r, g, b; } Color;\n *    size_t newColor(const Color** outp) {\n *      Color* c = (Color*)malloc(sizeof(Color));\n *      c->r = 0xFF;\n *      c->g = 0xCA;\n *      c->b = 0x0;\n *      *outp = c;\n *      return sizeof(Color);\n *    }\n *    void freeColor(const Color* p) {\n *      free(p);\n *   }\n *\n *    // JavaScript\n *    let color = withOutPtr(_newColor)\n *    console.log(\"RGB:\", color[0], color[1], color[2])\n *   _freeColor(color.heapAddr)\n */\nfunction withOutPtr(fn) {\n  const len = fn(tmpPtr);\n  let addr = Module.HEAP32[tmpPtr >> 2];\n  if (addr == 0) {\n    return null;\n  }\n  const buf = Module.HEAPU8.subarray(addr, addr + len);\n  buf.heapAddr = addr;\n  return buf;\n}\n\n/**\n * withTmpBytePtr takes an ArrayBuffer or Uint8Array and:\n * 1. copies it into the WASM module memory\n * 2. calls fn(pointer, size)\n * 3. calls free(pointer)\n *\n * @param {ArrayBuffer} buf\n * @param {Function} fn\n */\nfunction withTmpBytePtr(buf, fn) {\n  const size = buf.length;\n  const ptr = mallocbuf(buf, size);\n  const r = fn(ptr, size);\n  Module._wfree(ptr);\n  return r;\n}\n\n/**\n * mallocbuf allocates memory in the WASM heap and copies length bytes\n * from byteArray into the allocated location.\n * Returns the address to the allocated memory.\n *\n * @param {ArrayBuffer} byteArray\n * @param {number} size\n */\nfunction mallocbuf(byteArray, length) {\n  const offs = Module._wrealloc(0, length);\n  Module.HEAPU8.set(byteArray, offs);\n  return offs;\n}\n\n/**\n * WError represents an error from a wasm module\n */\nclass WError extends Error {\n  constructor(code, message, file, line) {\n    super(message, file || 'wasm', line || 0);\n    this.name = 'WError';\n    this.code = code;\n  }\n}\n\n/**\n * Get & clear last WErr. Returns null if there was no error.\n * Uses a descriptive name so to help in stack traces.\n */\nfunction error_from_wasm() {\n  // :WError|null\n  const code = Module._WErrGetCode();\n  if (code !== 0) {\n    const msgptr = Module._WErrGetMsg();\n    const message = msgptr != 0 ? UTF8ArrayToString(Module.HEAPU8, msgptr) : '';\n    Module._WErrClear();\n    return new WError(code, message);\n  }\n}\n\nfunction werrCheck() {\n  const err = error_from_wasm();\n  if (err) {\n    throw err;\n  }\n}\n","\n      import { ready, parse, ParseFlags } from './src/index.js';\n      const markdown = await ready();\n\n      /** @type {HTMLTextareaElement} */\n      const inputEl = document.getElementById('markdown-input');\n      /** @type {HTMLDivElement} */\n      const outputEl = document.getElementById('html-output');\n\n      let line = inputEl.value.split('\\n').length;\n      if (line <= 3) {\n        line = 3;\n      }\n      inputEl.rows = line + 1;\n\n      let hljsTimer;\n\n      function update() {\n        const source = inputEl.value;\n        const html = parse(source, {\n          parseFlags: ParseFlags.DEFAULT | ParseFlags.NO_HTML,\n        });\n        outputEl.innerHTML = html;\n        updateCodeHighlight();\n      }\n\n      function updateCodeHighlight() {\n        clearTimeout(hljsTimer);\n        if (typeof hljs == 'undefined') {\n          hljsTimer = setTimeout(updateCodeSyntaxHighlighting, 500);\n          return;\n        }\n        document\n          .querySelectorAll('pre code[class^=\"language-\"]')\n          .forEach(block => {\n            hljs.highlightBlock(block);\n          });\n      }\n\n      inputEl.addEventListener('input', update);\n      update();\n\n      // load the markdown module to make it playable in the browser console\n      console.log('markdown module API:', markdown);\n\n      window.addEventListener('DOMContentLoaded', () => {\n        let line = inputEl.value.split('\\n').length;\n        if (line <= 3) {\n          line = 3;\n        }\n        console.log(line);\n\n        //行数分のrowsに変更\n        inputEl.setAttribute('rows', line + 1);\n        inputEl.addEventListener('input', setTextareaHeight);\n\n        function setTextareaHeight() {\n          this.style.height = 'auto';\n          this.style.height = `${this.scrollHeight}px`;\n        }\n      });\n    ","export default {}"],"names":["Module","_scriptDir","readyPromiseResolve","readyPromiseReject","resolve","reject","moduleOverrides","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","scriptDirectory","locateFile","path","read_","readAsync","readBinary","createRequire","__vitePreload","__viteBrowserExternal$1","require","fs","nodePath","filename","binary","isFileURI","ret","onload","onerror","err","data","ex","ExitStatus","reason","url","xhr","wasmBinary","abort","wasmMemory","ABORT","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","str","u0","u1","u2","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","i","stringToUTF8","outPtr","lengthBytesUTF8","len","c","buffer","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateGlobalBufferAndViews","buf","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","addOnInit","runDependencies","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","what","e","dataURIPrefix","isDataURI","wasmBinaryFile","getBinary","file","getBinaryPromise","response","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","receiveInstantiationResult","result","instantiateArrayBuffer","receiver","instantiateAsync","status","callbacks","__embind_register_bigint","primitiveType","name","size","minRange","maxRange","getShiftFromSize","embind_init_charCodes","codes","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","char_0","char_9","makeLegalFunctionName","f","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","message","stack","BindingError","throwBindingError","registerType","rawType","registeredInstance","options","__embind_register_bool","trueValue","falseValue","shift","wt","destructors","o","pointer","emval_free_list","emval_handle_array","__emval_decref","handle","count_emval_handles","count","get_first_emval","init_emval","Emval","value","simpleReadValueFromPointer","__embind_register_emval","rv","floatReadValueFromPointer","__embind_register_float","integerReadValueFromPointer","signed","__embind_register_integer","fromWireType","bitshift","isUnsignedType","checkAssertions","toTypeName","toWireType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","length","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","_free","valueIsOfTypeString","base","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","maxReadBytes","__embind_register_void","_emscripten_memcpy_big","dest","src","num","getHeapMax","emscripten_realloc_buffer","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","newSize","replacement","uleb128Encode","n","target","sigToWasmTypes","sig","typeNames","type","generateFuncType","sigRet","sigParam","typeCodes","convertJsFunctionToWasm","func","typeSectionBody","bytes","wrappedFunc","wasmTableMirror","getWasmTableEntry","funcPtr","updateTableMap","offset","functionsInTableMap","item","freeTableIndexes","getEmptyTableSlot","setWasmTableEntry","addFunction","wrapped","removeFunction","index","calledRun","runCaller","run","args","doRun","tmpPtr","ready","init","ParseFlags","OutputFlags","parse","source","parseFlags","outputFlags","onCodeBlockPtr","create_onCodeBlock_fn","as_byte_array","outbuf","withOutPtr","outptr","withTmpBytePtr","inptr","inlen","werrCheck","utf8","onCodeBlock","metaptr","metalen","lang","bodystr","resbuf","resptr","mallocbuf","something","enc","dec","s","b","fn","addr","r","byteArray","offs","WError","code","line","error_from_wasm","msgptr","markdown","inputEl","outputEl","hljsTimer","update","html","updateCodeHighlight","block","setTextareaHeight","__viteBrowserExternal"],"mappings":"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"}